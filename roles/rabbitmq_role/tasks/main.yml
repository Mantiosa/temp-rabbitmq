---
- name: Ensure prerequisite packages are installed
  apt:
    name: ['apt-transport-https', 'curl', 'gnupg']
    state: present
  when: ansible_os_family == 'Debian'

- name: Remove any existing RabbitMQ GPG keys (if they exist)
  file:
    path: "/usr/share/keyrings/rabbitmq.{{ item }}.gpg"
    state: absent
  loop:
    - E495BB49CC4BBE5B  # Erlang signing key
    - 9F4587F226208342  # RabbitMQ signing key
  when: ansible_os_family == 'Debian'

# I want to shorten it for it to pass yamllint, but the keys get malformed or corrupted.

- name: Add RabbitMQ signing key
  shell: |
    curl -fsSL "https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-server.9F4587F226208342.key" \
      | gpg --dearmor --yes -o /usr/share/keyrings/rabbitmq.9F4587F226208342.gpg
  args:
    creates: /usr/share/keyrings/rabbitmq.9F4587F226208342.gpg
  when: ansible_os_family == 'Debian'

- name: Add Erlang signing key
  shell: |
    curl -fsSL "https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-erlang.E495BB49CC4BBE5B.key" \
      | gpg --dearmor --yes -o /usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg
  args:
    creates: /usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg
  when: ansible_os_family == 'Debian'
  when: ansible_os_family == 'Debian'

- name: Add Cloudsmith RabbitMQ repository signing key
  shell: |
    curl -1sLf "https://github.com/rabbitmq/" \
      "signing-keys/releases/download/3.0/" \
      "cloudsmith.rabbitmq-server.9F4587F226208342.key" \
      | gpg --dearmor \
      | tee /usr/share/keyrings/rabbitmq.9F4587F226208342.gpg > /dev/null
  args:
    creates: /usr/share/keyrings/rabbitmq.9F4587F226208342.gpg
  when: ansible_os_family == 'Debian'

- name: Check if RabbitMQ signing key exists
  stat:
    path: /usr/share/keyrings/rabbitmq.9F4587F226208342.gpg
  register: rabbitmq_key

- name: Check if Erlang signing key exists
  stat:
    path: /usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg
  register: erlang_key

- name: Fail if any of the required keys are missing
  fail:
    msg: "RabbitMQ keys are missing!"
  when: not rabbitmq_key.stat.exists or not erlang_key.stat.exists

# lint is mad, but otherwise the sources get "malformed", this one is a doozy

- name: Add RabbitMQ apt sources list
  copy:
    dest: /etc/apt/sources.list.d/rabbitmq.list
    content: |
      ## Provides modern Erlang/OTP releases
      deb [arch=amd64 signed-by=/usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg] https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-erlang/deb/debian bookworm main
      deb-src [signed-by=/usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg] https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-erlang/deb/debian bookworm main

      # another mirror for redundancy
      deb [arch=amd64 signed-by=/usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg] https://ppa2.rabbitmq.com/rabbitmq/rabbitmq-erlang/deb/debian bookworm main
      deb-src [signed-by=/usr/share/keyrings/rabbitmq.E495BB49CC4BBE5B.gpg] https://ppa2.rabbitmq.com/rabbitmq/rabbitmq-erlang/deb/debian bookworm main

      ## Provides RabbitMQ
      deb [arch=amd64 signed-by=/usr/share/keyrings/rabbitmq.9F4587F226208342.gpg] https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-server/deb/debian bookworm main
      deb-src [signed-by=/usr/share/keyrings/rabbitmq.9F4587F226208342.gpg] https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-server/deb/debian bookworm main

      # another mirror for redundancy
      deb [arch=amd64 signed-by=/usr/share/keyrings/rabbitmq.9F4587F226208342.gpg] https://ppa2.rabbitmq.com/rabbitmq/rabbitmq-server/deb/debian bookworm main
      deb-src [signed-by=/usr/share/keyrings/rabbitmq.9F4587F226208342.gpg] https://ppa2.rabbitmq.com/rabbitmq/rabbitmq-server/deb/debian bookworm main
  when: ansible_os_family == 'Debian'

- name: Update apt cache after adding RabbitMQ repositories
  apt:
    update_cache: true
  when: ansible_os_family == 'Debian'

- name: Install Erlang packages
  apt:
    name:
      - erlang-base
      - erlang-asn1
      - erlang-crypto
      - erlang-eldap
      - erlang-ftp
      - erlang-inets
      - erlang-mnesia
      - erlang-os-mon
      - erlang-parsetools
      - erlang-public-key
      - erlang-runtime-tools
      - erlang-snmp
      - erlang-ssl
      - erlang-syntax-tools
      - erlang-tftp
      - erlang-tools
      - erlang-xmerl
    state: present
  when: ansible_os_family == 'Debian'

- name: Install rabbitmq-server
  apt:
    name: rabbitmq-server
    state: latest
  when: ansible_os_family == 'Debian'

- name: Enable RabbitMQ management plugin
  command: rabbitmq-plugins enable {{ rabbitmq_admin_plugin }}
  args:
    creates: /etc/rabbitmq/enabled_plugins

- name: Remove default guest user
  rabbitmq_user:
    user: guest
    state: absent

- name: Create RabbitMQ vhost
  rabbitmq_vhost:
    name: "{{ rabbitmq_vhost }}"
    state: present

- name: Create RabbitMQ user with password
  rabbitmq_user:
    user: "{{ rabbitmq_user }}"
    password: "{{ rabbitmq_test_user_password }}"
    state: present

- name: Set permissions for RabbitMQ user on "{{ rabbitmq_vhost }}"
  rabbitmq_user:
    user: "{{ rabbitmq_user }}"
    vhost: "{{ rabbitmq_vhost }}"
    configure_priv: ".*"
    write_priv: ".*"
    read_priv: ".*"

- name: Set permissions for RabbitMQ user on vhost "/"
  rabbitmq_user:
    user: "{{ rabbitmq_user }}"
    vhost: "/"
    configure_priv: ".*"
    write_priv: ".*"
    read_priv: ".*"

- name: Create systemd override directory for RabbitMQ service
  file:
    path: /etc/systemd/system/rabbitmq-server.service.d
    state: directory
    mode: '0755'

- name: Configure open files limit for RabbitMQ to 100K
  copy:
    dest: /etc/systemd/system/rabbitmq-server.service.d/override.conf
    content: |
      [Service]
      LimitNOFILE=100000
  notify:
    - Reload systemd
    - Restart rabbitmq-server

# --- New Task: Install ufw firewall package ---
- name: Install ufw firewall package
  apt:
    name: ufw
    state: present
  when: ansible_os_family == 'Debian'

- name: Allow RabbitMQ management console from anywhere (port 15672)
  ufw:
    rule: allow
    port: '15672'
    proto: tcp

- name: Allow RabbitMQ default port (5672) access only from localhost
  ufw:
    rule: allow
    port: '5672'
    proto: tcp
    from_ip: 127.0.0.1
